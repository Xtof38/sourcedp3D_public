#!/bin/bash

###########################################################################
# This is a script to display  _histoclust* files in the current 
# directory
###########################################################################

# Christophe.martin@grenoble-inp.fr    November 2006

BINARY_std=$(whereis -b cdp3D | awk '{print $NF}' | rev | sed 's/D3pdc//' | rev)
theuser=`whoami`
# since several histo files may be there ask the user:
ls -1 *_histoclust | sed '/plot_*/d' > tmp1
numhisto=`grep -c "_histoclust"  < tmp1`

if [ $numhisto = 1 ];then     
  file2display=`cat tmp1`
  echo "History graph from $file2display"
else
  if [ $numhisto = 0 ];then
    echo '!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!'       
    echo ' no histoclust files have been generated: '
    echo ' use first command cdp3D -class file'
    echo '!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!' 
    exit      	 
  else  
    echo '!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!'       
    echo ' several histo files have been generated: '
    cat tmp1
    echo '  Which file do you want ?'
    read file2display
    echo '!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!'       	 
  fi
fi 

if [ -f $file2display ];then     
  echo ""
else
  echo '!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!'       
  echo "file $file2display does not exist !"
  echo '!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!'       	 
  exit
fi   

# gnup_display  is the standard view for gnuplot and display_  
cp -f "$BINARY_std"gnup_display plot_$file2display

echo "set title \"Histogram of cluster sizes\"" >> plot_$file2display
echo "set xlabel \"Cluster size (in number of particles)\"" >> plot_$file2display
echo "set ylabel \"Number of Clusters\"" >> plot_$file2display
echo "set grid" >> plot_$file2display
# with quotes (-Q) one item per line (-1)
ls -1 -Q $file2display* > tmp1
# plot only for the first line (1,1)
sed '1,1 s/^/plot /g' tmp1 > tmp2
# replot everywhere except for the first line (1,1)
sed '1,1 !s/^/replot /g' tmp2 > tmp3
# add  " u '$Xcolumn':'$Ycolumn' title "at the end ($) of every line 
sed 's/$/ u ($1):($2) title /g' tmp3 > tmp2


# number of lines in tmp1
numlines=`grep -c "$file2display"  < tmp1`
let "i=0"
     until [ "$numlines" = "0" ]
     do
       let "numlines-=1"
       let "i+=1"
# get the first line of tmp1       
       tocopy=`sed -n ''1'p' tmp1`
# and copy it on th ith line of tmp2
       sed ''$i','$i' s/$/'$tocopy'/g' tmp2 > tmp3
# decreasing the number of lines in tmp1            
       sed '1,1d' tmp1 > tmp4
       mv -f tmp3 tmp2   
       mv -f tmp4 tmp1    
     done 

sed 's/$/ w l lw 2 /g' tmp2 > tmp3
cat tmp3 >> plot_$file2display

if [ "$option" != "-keep" ];then
  gnuplot -geometry 560x400 -persist plot_$file2display 
fi 
rm -f tmp1 tmp2 tmp3 tmp4
