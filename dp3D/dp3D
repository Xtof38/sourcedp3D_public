#!/bin/bash
! $Id: dp3D,v 2.12 2024/07/23 08:17:29 chris Exp $
#

###########################################################################
# This is a script for launching the dp3D executable without too much errors 
###########################################################################

# Christophe.martin@grenoble-inp.fr  

# needto have unlimited access for memory:
ulimit -s unlimited

# find in the path the directory of dp3D executables
BINARY_std=$(whereis dp3D | awk '{print $NF}' | rev | sed 's/D3pd//' | rev)

if [  "$BINARY_std" = "" -o ! -d "$BINARY_std" ];then
   echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
   echo "!   No correct dp3D executable directory found            !"
   echo "!   in variable   PATH                                    !" 
   echo "!   declare PATH in .bash_profile                         !"
   echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
   echo  "BINARY_std: $BINARY_std"
   echo  "PATH: $PATH"  
   exit
fi


theuser=`whoami`
BINARY=/$HOME/bin/
# this list should be the same as the list in the scpdp3D shell:
list_exe_2update="dp3D_seq dp3D_openMP dp3D_openMP1 dp3D_openMP2 dp3D_openMP4 \
                  dp3D_openMP6 dp3D_openMP8"

#### the following arguments for dp3D do not launch dp3D calculations
#### but send a signal while executing

case $1 in
  -write_coord )
       $BINARY_std/dp3D_write_coord $1
       exit
       ;;
  -write_log )
       $BINARY_std/dp3D_write_coord $1
       exit
       ;;
  -clean_stop )
       $BINARY_std/dp3D_write_coord $1
       exit
       ;;
  -v )
       if [ -f $BINARY_std/dp3D_version ];then
         cat $BINARY_std/dp3D_version 
       else
         echo "no dp3D version number available"
       fi
       exit
       ;;       
esac



if [ -f $BINARY_std/dp3D_version ];then
  cat $BINARY_std/dp3D_version > logdp3D.tmp
fi
echo "dp3D $1 started on machine $(hostname) by $(whoami)" >> logdp3D.tmp
echo "at time: $(date +"%T and date %d-%m-%Y") " >> logdp3D.tmp
echo "directory: $(pwd)" >> logdp3D.tmp
cat logdp3D.tmp
newversion="no"
# only useful on the linux machines:
#this ensures that the latest version is used :
if [ ! -d $BINARY ];then
  echo "Creating directory $BINARY for running dp3D"
  mkdir $BINARY
fi

# cp brutally, even if not a new version all the executables:
if [ -d $BINARY_std ];then
  for file in $list_exe_2update
  do  
    rm -f $BINARY/"$file"
    cp  $BINARY_std/"$file" $BINARY/"$file"
  done
fi

where=$(pwd)
samedir=$($BINARY_std/mydp3D | grep -w "$where" | grep -x -c "$where")
if [ "$samedir" != "0"  ];then
   echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
   echo "!   A dp3D program is already running in this directory   !"
   echo "!   It is not wise to run another one                     !"
   echo "!   in the same directory             !!                  !"
   echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
   $BINARY_std/mydp3D 
   exit
fi


# rm files from a former dp3D calc only when sure that the option is correct

launch=no
case $1 in
  -openMP )
       $BINARY_std/cleandp3D -f
       mv logdp3D.tmp log
       $BINARY/dp3D_openMP
       launch=yes
       ;;
  -openMP1 )
       $BINARY_std/cleandp3D -f
       mv logdp3D.tmp log
       $BINARY/dp3D_openMP1
       launch=yes
       ;;
  -openMP2 )
       $BINARY_std/cleandp3D -f
       mv logdp3D.tmp log
       $BINARY/dp3D_openMP2
       launch=yes
       ;;
  -openMP4 )
       $BINARY_std/cleandp3D -f
       mv logdp3D.tmp log
       $BINARY/dp3D_openMP4
       launch=yes
       ;;
  -openMP6 )
       $BINARY_std/cleandp3D -f
       mv logdp3D.tmp log
       $BINARY/dp3D_openMP6
       launch=yes
       ;;
  -openMP8 )
       $BINARY_std/cleandp3D -f
       mv logdp3D.tmp log
       $BINARY/dp3D_openMP8
       launch=yes
       ;;
  -test* )
# ntest allows to launch several versions of a test version
# needs to modify Make_dp3De
       ntest=$(echo $1 | grep -o [0-9])
       $BINARY_std/cleandp3D -f
       mv logdp3D.tmp log
       /$HOME/bin/dp3De$ntest $2
       launch=yes
       ;;
   "" )
       $BINARY_std/cleandp3D -f
       mv logdp3D.tmp log
       $BINARY/dp3D_seq
       launch=yes
       ;;
     * )
       echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
       echo "$1 is not a valid option for dp3D"
       echo "valid options : "
       echo "-openMP[n] with n=2,4,6,8 using n threads    "
       echo "-openMP   using all threads                   "
       echo "-test test executable of dp3D"
       echo "-write_log or -write_coord signaling dp3D to write in log or to write a coord file"
       echo "-cleanstop signaling dp3D to write a coord file and then to stop "
       echo "-v   version of dp3D"
       echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
       rm -f logdp3D.tmp
       exit
esac




rm -f logdp3D.tmp
exit
